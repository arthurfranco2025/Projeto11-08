// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("users")
}

//ARRUMAR A DATA AQUI
model Cliente {
  id         String    @id @default(uuid())
  name       String
  email      String
  password   String
  cpf        String
  data_nasc  DateTime? 
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())

  avaliacao  Avaliacao[]

  @@map("clientes")
}

model Favorito{
  id         String @id @default(uuid())
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())

  product    Product @relation(fields: [product_id], references: [id])
  product_id String
  
  @@map("favorites")
}

model Category{
  id String @id @default(uuid())
  name String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("categories")
  products Product[]
}

model Product{
  id String @id @default(uuid())
  name String
  price String
  description String
  banner String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  category Category @relation(fields: [category_id], references: [id])
  category_id String

  items Item[]
  favorito    Favorito[]

  @@map("products")
}

model Order{
  id String @id @default(uuid())
  table Int
  status Boolean @default(false)
  draft Boolean @default(true)
  name String?
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  avaliacao  Avaliacao[]
  items Item[]

  @@map("orders")
}

model Avaliacao {
  id        String @id @default(uuid())
  nota      Int
  descricao String
  created_at DateTime? @default(now())

  cliente     Cliente   @relation(fields: [cliente_id], references: [id])
  order      Order   @relation(fields: [order_id], references: [id])
  cliente_id  String
  order_id   String

  @@map("avaliacoes")
}

model Item {
  id String @id @default(uuid())
  amount Int
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  order Order @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@map("items")
  order_id String
  product_id String
}